name: Linting & code analysis

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached environment
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-venv-
      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ./.venv
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

  analyse-mypy:
    name: Mypy analysis
    needs: build
    steps:
      - run: mypy --namespace-packages src/

  analyze-pylint:
    name: Pylint analysis
    needs: build
    steps:
      - run: pylint src/

  analyze-flake8:
    name: Flake8 analysis
    needs: build
    steps:
      - run: flake8 src/

  analyse-black:
    name: Black analysis
    needs: build
    steps:
      - run: black --check src/
